[pytest]
# Pytest configuration for Arbihedron

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Add project root to Python path
pythonpath = .

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    -ra
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    benchmark: Performance benchmark tests
    asyncio: Tests that use asyncio
    requires_redis: Tests that require Redis connection
    requires_exchange: Tests that require exchange API access
    paper_trading: Tests for paper trading functionality
    gnn: Tests for GNN engine

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */site-packages/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Async settings
asyncio_mode = auto

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution settings (requires pytest-xdist)
# Run with: pytest -n auto
# addopts = -n auto
